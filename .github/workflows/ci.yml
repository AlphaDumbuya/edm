name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DATABASE_URL: "postgresql://test:test@localhost:5432/test"
  DIRECT_DATABASE_URL: "postgresql://test:test@localhost:5432/test"
  NEXTAUTH_URL: "http://localhost:3000"
  NEXTAUTH_SECRET: "test-secret"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
    
    - name: Setup environment
      run: |
        echo "SMTP_HOST=test" >> $GITHUB_ENV
        echo "SMTP_PORT=587" >> $GITHUB_ENV
        echo "SMTP_USER=test" >> $GITHUB_ENV
        echo "SMTP_PASSWORD=test" >> $GITHUB_ENV
        echo "EMAIL_FROM_NAME=EDM Events Team" >> $GITHUB_ENV
        echo "CRON_SECRET=test-secret" >> $GITHUB_ENV
    
    - name: Generate Prisma Client
      run: npx prisma generate
    
    - name: Apply database migrations
      run: npx prisma migrate deploy
    
    - name: Type check
      run: npm run typecheck
    
    - name: Build
      run: npm run build
